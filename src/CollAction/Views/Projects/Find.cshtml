@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@model FindProjectsViewModel

@{
    ViewData["Title"] = Localizer["Find"];
    var DefaultDisplayProjectViewModel = new DisplayProjectViewModel();
}

<h2>@Localizer["Find"]</h2>

<form asp-action="Find">
    <div class="form-horizontal">
        <h4>@Localizer["Project"]</h4>
        <hr />
        <div class="form-group">
            <label asp-for="SearchText" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="SearchText" class="form-control" value="@Model.SearchText" />
                <span asp-validation-for="SearchText" class="text-danger" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Project.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Project.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Project.Goal)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Project.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Project.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Project.Target)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Project.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Project.End)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.StatusDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => DefaultDisplayProjectViewModel.Progress)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in @Model.Projects) {
        <tr>
            <td>
                @Html.DisplayFor(content => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(content => item.Project.Description)
            </td>
            <td>
                @Html.DisplayFor(content => item.Project.Goal)
            </td>
            <td>
                @Html.DisplayFor(content => item.Project.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(content => item.Project.Location.Name)
            </td>
            <td>
                @Html.DisplayFor(content => item.Project.Target)
            </td>
            <td>
                @Html.DisplayFor(content => item.Project.Start)
            </td>
            <td>
                @Html.DisplayFor(content => item.Project.End)
            </td>
            <td>
                @Html.DisplayFor(content => item.StatusDescription)
            </td>
            <td>
                @Html.DisplayFor(content => item.Progress)%
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Project.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Project.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Project.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div>
    <a asp-action="Index">@Localizer["Back to List"]</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
